plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	// jackson은 json, xml, csv 같은 입력을 객체로 (역)직렬화 할 수 있다.
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.7.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// 쿼리 파라미터를 로그로 남기는 외부 라이브러리
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

	// 유효성 검사 관련 라이블러리
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.2'

	// security
	// 스프링 시큐리티 버전
//	implementation("org.springframework.boot:spring-boot-starter-security:3.1.3")
//	implementation("org.springframework.security:spring-security-test:6.1.3")
//	implementation("org.springframework.boot:spring-boot-starter-oauth2-client:3.1.3")

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// JUnitTest
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok:1.18.28'
}
clean {
	delete file('src/main/generated')
}
tasks.named('test') {
	useJUnitPlatform()
}
